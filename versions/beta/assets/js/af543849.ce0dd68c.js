"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[7748],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),u=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,g=c["".concat(l,".").concat(m)]||c[m]||d[m]||r;return n?o.createElement(g,i(i({ref:t},p),{},{components:n})):o.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<r;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return i}});var o=n(7294),a=n(6010),r={tabItem:"tabItem_Ymn6"};function i(e){var t=e.children,n=e.hidden,i=e.className;return o.createElement("div",{role:"tabpanel",className:(0,a.Z)(r.tabItem,i),hidden:n},t)}},4866:function(e,t,n){n.d(t,{Z:function(){return w}});var o=n(7462),a=n(7294),r=n(6010),i=n(2466),s=n(6550),l=n(1980),u=n(7392),p=n(12);function c(e){return function(e){var t,n;return null!=(t=null==(n=a.Children.map(e,(function(e){if(!e||(0,a.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function d(e){var t=e.values,n=e.children;return(0,a.useMemo)((function(){var e=null!=t?t:c(n);return function(e){var t=(0,u.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function m(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function g(e){var t=e.queryString,n=void 0!==t&&t,o=e.groupId,r=(0,s.k6)(),i=function(e){var t=e.queryString,n=void 0!==t&&t,o=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!o)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=o?o:null}({queryString:n,groupId:o});return[(0,l._X)(i),(0,a.useCallback)((function(e){if(i){var t=new URLSearchParams(r.location.search);t.set(i,e),r.replace(Object.assign({},r.location,{search:t.toString()}))}}),[i,r])]}function f(e){var t,n,o,r,i=e.defaultValue,s=e.queryString,l=void 0!==s&&s,u=e.groupId,c=d(e),f=(0,a.useState)((function(){return function(e){var t,n=e.defaultValue,o=e.tabValues;if(0===o.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:o}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+o.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var a=null!=(t=o.find((function(e){return e.default})))?t:o[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:i,tabValues:c})})),h=f[0],y=f[1],b=g({queryString:l,groupId:u}),k=b[0],v=b[1],w=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),n=(0,p.Nk)(t),o=n[0],r=n[1],[o,(0,a.useCallback)((function(e){t&&r.set(e)}),[t,r])]),N=w[0],C=w[1],S=function(){var e=null!=k?k:N;return m({value:e,tabValues:c})?e:null}();return(0,a.useLayoutEffect)((function(){S&&y(S)}),[S]),{selectedValue:h,selectValue:(0,a.useCallback)((function(e){if(!m({value:e,tabValues:c}))throw new Error("Can't select invalid tab value="+e);y(e),v(e),C(e)}),[v,C,c]),tabValues:c}}var h=n(2389),y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){var t=e.className,n=e.block,s=e.selectedValue,l=e.selectValue,u=e.tabValues,p=[],c=(0,i.o5)().blockElementScrollPositionUntilNextRender,d=function(e){var t=e.currentTarget,n=p.indexOf(t),o=u[n].value;o!==s&&(c(t),l(o))},m=function(e){var t,n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var o,a=p.indexOf(e.currentTarget)+1;n=null!=(o=p[a])?o:p[0];break;case"ArrowLeft":var r,i=p.indexOf(e.currentTarget)-1;n=null!=(r=p[i])?r:p[p.length-1]}null==(t=n)||t.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},u.map((function(e){var t=e.value,n=e.label,i=e.attributes;return a.createElement("li",(0,o.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:function(e){return p.push(e)},onKeyDown:m,onClick:d},i,{className:(0,r.Z)("tabs__item",y.tabItem,null==i?void 0:i.className,{"tabs__item--active":s===t})}),null!=n?n:t)})))}function k(e){var t=e.lazy,n=e.children,o=e.selectedValue,r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var i=r.find((function(e){return e.props.value===o}));return i?(0,a.cloneElement)(i,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==o})})))}function v(e){var t=f(e);return a.createElement("div",{className:(0,r.Z)("tabs-container",y.tabList)},a.createElement(b,(0,o.Z)({},e,t)),a.createElement(k,(0,o.Z)({},e,t)))}function w(e){var t=(0,h.Z)();return a.createElement(v,(0,o.Z)({key:String(t)},e))}},9382:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return m}});var o=n(7462),a=n(3366),r=(n(7294),n(3905)),i=n(4866),s=n(5162),l=["components"],u={id:"quick-start-guide",title:"Quick Start Guide"},p=void 0,c={unversionedId:"guides/quick-start-guide",id:"guides/quick-start-guide",title:"Quick Start Guide",description:"Quick Overview of Typegoose",source:"@site/../docs/guides/quick-start-guide.md",sourceDirName:"guides",slug:"/guides/quick-start-guide",permalink:"/typegoose/versions/beta/docs/guides/quick-start-guide",draft:!1,editUrl:"https://github.com/typegoose/typegoose/edit/beta/docs/../docs/guides/quick-start-guide.md",tags:[],version:"current",frontMatter:{id:"quick-start-guide",title:"Quick Start Guide"},sidebar:"guides",next:{title:"FAQ",permalink:"/typegoose/versions/beta/docs/guides/faq"}},d={},m=[{value:"Quick Overview of Typegoose",id:"quick-overview-of-typegoose",level:2},{value:"How to Start using typegoose",id:"how-to-start-using-typegoose",level:2},{value:"Requirements",id:"requirements",level:3},{value:"Install",id:"install",level:3},{value:"How to use Typegoose",id:"how-to-use-typegoose",level:3},{value:"Do&#39;s and Don&#39;ts of Typegoose",id:"dos-and-donts-of-typegoose",level:2},{value:"Extra Examples",id:"extra-examples",level:2},{value:"Static Methods",id:"static-methods",level:3},{value:"Instance Methods",id:"instance-methods",level:3},{value:"Hooks",id:"hooks",level:3}],g={toc:m},f="wrapper";function h(e){var t=e.components,n=(0,a.Z)(e,l);return(0,r.kt)(f,(0,o.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"quick-overview-of-typegoose"},"Quick Overview of Typegoose"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"This Guide is for Typegoose version ~11.0")),(0,r.kt)("p",null,'Typegoose is a "wrapper" for easily writing Mongoose models with TypeScript.'),(0,r.kt)("p",null,"Instead of writing this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// This is a representation of how typegoose's compile output would look\ninterface Car {\n  model?: string;\n}\n\ninterface Job {\n  title?: string;\n  position?: string;\n}\n\ninterface User {\n  name?: string;\n  age!: number;\n  preferences?: string[];\n  mainJob?: Job;\n  jobs?: Job[];\n  mainCar?: Car | string;\n  cars?: (Car | string)[];\n}\n\nconst JobSchema = new mongoose.Schema({\n  title: String;\n  position: String;\n});\n\nconst CarModel = mongoose.model('Car', {\n  model: String,\n});\n\nconst UserModel = mongoose.model('User', {\n  name: { type: String },\n  age: { type: Number, required: true },\n  preferences: [{ type: String }],\n  mainJob: { type: JobSchema },\n  jobs: [{ type: JobSchema }],\n  mainCar: { type: Schema.Types.ObjectId, ref: 'Car' },\n  cars: [{ type: Schema.Types.ObjectId, ref: 'Car' }],\n});\n")),(0,r.kt)("p",null,"You can just write this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class Job {\n  @prop()\n  public title?: string;\n\n  @prop()\n  public position?: string;\n}\n\nclass Car {\n  @prop()\n  public model?: string;\n}\n\nclass User {\n  @prop()\n  public name?: string;\n\n  @prop({ required: true })\n  public age!: number; // This is a single Primitive\n\n  @prop({ type: () => [String] })\n  public preferences?: string[]; // This is a Primitive Array\n\n  @prop()\n  public mainJob?: Job; // This is a single SubDocument\n\n  @prop({ type: () => [Job] })\n  public jobs?: Job[]; // This is a SubDocument Array\n\n  @prop({ ref: () => Car })\n  public mainCar?: Ref<Car>; // This is a single Reference\n\n  @prop({ ref: () => Car })\n  public cars?: Ref<Car>[]; // This is a Reference Array\n}\n")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"type")," has to be defined when working with Arrays, because Reflection only returns basic information. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/microsoft/TypeScript/issues/7169"},"Look here for why"),(0,r.kt)("br",{parentName:"p"}),"\n","Like ",(0,r.kt)("inlineCode",{parentName:"p"},"public: string[]")," is in reflection only ",(0,r.kt)("inlineCode",{parentName:"p"},"Array"),".  ")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#non-null-assertion-operator-postfix-"},"Look here for what ",(0,r.kt)("inlineCode",{parentName:"a"},"!")," means on a property"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/2/functions.html#optional-parameters"},"Look here for what ",(0,r.kt)("inlineCode",{parentName:"a"},"?")," means on a property"),"  "),(0,r.kt)("h2",{id:"how-to-start-using-typegoose"},"How to Start using typegoose"),(0,r.kt)("h3",{id:"requirements"},"Requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"TypeScript version ",(0,r.kt)("inlineCode",{parentName:"li"},"^4.9")," (since 10.0) is recommended, though older ones may also work"),(0,r.kt)("li",{parentName:"ul"},"NodeJS ",(0,r.kt)("inlineCode",{parentName:"li"},"^14.17.0")," (and ",(0,r.kt)("inlineCode",{parentName:"li"},"@types/node@16"),")"),(0,r.kt)("li",{parentName:"ul"},"Mongoose ",(0,r.kt)("inlineCode",{parentName:"li"},"~7.3.0")),(0,r.kt)("li",{parentName:"ul"},"A IDE that supports TypeScript linting is recommended to be used (VSCode is recommended)"),(0,r.kt)("li",{parentName:"ul"},"This Guide expects you to know how Mongoose (or at least its models) works"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"experimentalDecorators")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"emitDecoratorMetadata")," must be enabled in ",(0,r.kt)("inlineCode",{parentName:"li"},"tsconfig.json")),(0,r.kt)("li",{parentName:"ul"},"tsconfig option ",(0,r.kt)("inlineCode",{parentName:"li"},"target")," being at least ",(0,r.kt)("inlineCode",{parentName:"li"},"es6"),", recommended is ",(0,r.kt)("inlineCode",{parentName:"li"},"es2020"))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"tsconfig option ",(0,r.kt)("inlineCode",{parentName:"p"},"emitDecoratorMetadata")," is not strictly required, look ",(0,r.kt)("a",{parentName:"p",href:"/typegoose/versions/beta/docs/guides/use-without-emitDecoratorMetadata"},"here")," for more")),(0,r.kt)("h3",{id:"install"},"Install"),(0,r.kt)(i.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save @typegoose/typegoose # install typegoose itself\n\nnpm install --save mongoose # install peer-dependency mongoose\n"))),(0,r.kt)(s.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @typegoose/typegoose # install typegoose itself\n\nyarn add mongoose # install peer-dependency mongoose\n"))),(0,r.kt)(s.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add @typegoose/typegoose # install typegoose itself\n\npnpm add mongoose # install peer-dependency mongoose\n")))),(0,r.kt)("h3",{id:"how-to-use-typegoose"},"How to use Typegoose"),(0,r.kt)("p",null,"Let's say you have a Mongoose model like this one:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const kittenSchema = new mongoose.Schema({\n  name: String\n});\n\nconst KittenModel = mongoose.model('Kitten', kittenSchema);\n\nlet document = await KittenModel.create({ name: 'Kitty' });\n// \"document\" has basic mongoose inferred types\n")),(0,r.kt)("p",null,"With Typegoose, it can be converted to something like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class KittenClass {\n  @prop()\n  public name?: string;\n}\n\nconst KittenModel = getModelForClass(KittenClass);\n\nlet document = await KittenModel.create({ name: 'Kitty' });\n// \"document\" has proper (manual) typescript types of KittenClass\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"new KittenModel({} /*<-- this here*/)")," will have type suggestions, but they are ",(0,r.kt)("em",{parentName:"p"},"not enforced"),", ",(0,r.kt)("a",{parentName:"p",href:"/typegoose/versions/beta/docs/guides/faq#why-does-new-model-not-have-types"},"read more here"),".")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Since around mongoose 6.0, mongoose can infer types mostly from the schema definition, but it is still not perfect and arguably less overview-able than typegoose's style of classes.",(0,r.kt)("br",{parentName:"p"}),"\n","Also tsdoc comments are not transferred when using mongoose's inferred types.")),(0,r.kt)("h2",{id:"dos-and-donts-of-typegoose"},"Do's and Don'ts of Typegoose"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Typegoose is a wrapper for Mongoose's models & schemas"),(0,r.kt)("li",{parentName:"ul"},"Typegoose does not modify any functions of Mongoose"),(0,r.kt)("li",{parentName:"ul"},"Typegoose aims to get Mongoose's models to be stable through type-information from classes (without defining extra interfaces)"),(0,r.kt)("li",{parentName:"ul"},"Typegoose aims to make Mongoose more usable by making the models more type-rich with TypeScript"),(0,r.kt)("li",{parentName:"ul"},"Decorated schema configuration classes (like ",(0,r.kt)("inlineCode",{parentName:"li"},"KittenClass")," above) must use explicit type declarations")),(0,r.kt)("h2",{id:"extra-examples"},"Extra Examples"),(0,r.kt)("h3",{id:"static-methods"},"Static Methods"),(0,r.kt)("p",null,"Sometimes extra functions for model creation or pre-written queries are needed, they can be done as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class KittenClass {\n  @prop()\n  public name?: string;\n\n  @prop()\n  public species?: string;\n\n  // the \"this\" definition is required to have the correct types\n  public static async findBySpecies(this: ReturnModelType<typeof KittenClass>, species: string) {\n    return this.find({ species }).exec();\n  }\n}\nconst KittenModel = getModelForClass(KittenClass);\n\nconst docs = await KittenModel.findBySpecies('SomeSpecies');\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"pre-6.0 static functions needed ",(0,r.kt)("inlineCode",{parentName:"p"},"@staticMethod"),", but this is not needed anymore.")),(0,r.kt)("h3",{id:"instance-methods"},"Instance Methods"),(0,r.kt)("p",null,"Sometimes extra functions for manipulating data on an instance are needed, they can be done as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class KittenClass {\n  @prop()\n  public name?: string;\n\n  @prop()\n  public species?: string;\n\n  // the \"this\" definition is required to have the correct types\n  public async setSpeciesAndSave(this: DocumentType<KittenClass>, species: string) {\n    this.species = species;\n    await this.save();\n  }\n}\nconst KittenModel = getModelForClass(KittenClass);\n\nconst doc = new KittenModel({ name: 'SomeCat', species: 'SomeSpecies' });\nawait doc.setSpeciesAndSave('SomeOtherSpecies');\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Pre-6.0 static functions needed ",(0,r.kt)("inlineCode",{parentName:"p"},"@instanceMethod"),", but this is not needed anymore.")),(0,r.kt)("h3",{id:"hooks"},"Hooks"),(0,r.kt)("p",null,"Typegoose also supports hooks. They can be used like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"@pre<KittenClass>('save', function() {\n  this.isKitten = this.age < 1\n})\n@post<KittenClass>('save', function(kitten) {\n  console.log(kitten.isKitten ? 'We have a kitten here.' : 'We have a big kitty here.')\n})\nclass KittenClass {\n  @prop()\n  public name?: string;\n\n  @prop()\n  public species?: string;\n  \n  @prop()\n  public age?: number\n  \n  @prop({ default: false })\n  public isKitten?: boolean\n}\n\nconst KittenModel = getModelForClass(KittenClass);\n\nconst doc = new KittenModel({ name: 'SomeCat', species: 'SomeSpecies', age: 0 });\nawait doc.save(); // this should output \"We have a kitten here.\"\nconst doc = new KittenModel({ name: 'SomeCat', species: 'SomeSpecies', age: 2 });\nawait doc.save(); // this should output \"We have a big kitty here.\"\n")),(0,r.kt)("p",null,"For detailed explanation of Hooks, please see ",(0,r.kt)("a",{parentName:"p",href:"/typegoose/versions/beta/docs/api/decorators/hooks"},"Hooks"),"."),(0,r.kt)("p",null,"Note:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Do not use Arrow Functions, because it will break the binding of ",(0,r.kt)("inlineCode",{parentName:"li"},"this")),(0,r.kt)("li",{parentName:"ul"},"For ESLint users: Make sure that rule ",(0,r.kt)("inlineCode",{parentName:"li"},"eslint-no-use-before-defining")," is disabled, otherwise you might get ESLint errors / warnings inside the hooks")))}h.isMDXComponent=!0}}]);
"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[3034],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var m=a.createContext({}),s=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(m.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,m=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),u=s(n),c=o,g=u["".concat(m,".").concat(c)]||u[c]||d[c]||l;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,i=new Array(l);i[0]=c;var r={};for(var m in t)hasOwnProperty.call(t,m)&&(r[m]=t[m]);r.originalType=e,r[u]="string"==typeof e?e:o,i[1]=r;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9039:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return m},default:function(){return g},frontMatter:function(){return r},metadata:function(){return s},toc:function(){return u}});var a=n(7462),o=n(3366),l=(n(7294),n(3905)),i=["components"],r={id:"name-generation",title:"Typegoose's Name Generation"},m=void 0,s={unversionedId:"guides/advanced/name-generation",id:"guides/advanced/name-generation",title:"Typegoose's Name Generation",description:"In Typegoose the name generation can vary somewhat, this guide will explain all possible ways a name gets generated.",source:"@site/../docs/guides/advanced/name-generation.md",sourceDirName:"guides/advanced",slug:"/guides/advanced/name-generation",permalink:"/typegoose/docs/guides/advanced/name-generation",draft:!1,editUrl:"https://github.com/typegoose/typegoose/edit/master/docs/../docs/guides/advanced/name-generation.md",tags:[],version:"current",frontMatter:{id:"name-generation",title:"Typegoose's Name Generation"},sidebar:"guides",previous:{title:"Nested Discriminators",permalink:"/typegoose/docs/guides/advanced/nested-discriminators"},next:{title:"Manual Schema Modification",permalink:"/typegoose/docs/guides/advanced/manual-schema-modification"}},p={},u=[{value:"Default",id:"default",level:2},{value:"Using with <code>automaticName</code>",id:"using-with-automaticname",level:2},{value:"Using with <code>customName</code>",id:"using-with-customname",level:2},{value:"Using with <code>automaticName</code> and <code>customName</code>",id:"using-with-automaticname-and-customname",level:2},{value:"Simple Matrix",id:"simple-matrix",level:2}],d={toc:u},c="wrapper";function g(e){var t=e.components,n=(0,o.Z)(e,i);return(0,l.kt)(c,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"In Typegoose the name generation can vary somewhat, this guide will explain all possible ways a name gets generated."),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"This Guide will use the ",(0,l.kt)("a",{parentName:"p",href:"/typegoose/docs/api/functions/assertions"},(0,l.kt)("inlineCode",{parentName:"a"},"assertion"))," function that typegoose provides.",(0,l.kt)("br",{parentName:"p"}),"\n","TL;DR: This function is basically like NodeJS's ",(0,l.kt)("a",{parentName:"p",href:"https://nodejs.org/api/assert.html#assertvalue-message"},(0,l.kt)("inlineCode",{parentName:"a"},"assert")),", just more typescript friendly.")),(0,l.kt)("h2",{id:"default"},"Default"),(0,l.kt)("p",null,"The default, without any options the name that gets generated is the Class Name."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"class SomeClass {\n  @prop()\n  public someProp: string;\n}\n\n// The resulting name will be the class name\nassertion(getName(SomeClass) === 'SomeClass');\n")),(0,l.kt)("h2",{id:"using-with-automaticname"},"Using with ",(0,l.kt)("inlineCode",{parentName:"h2"},"automaticName")),(0,l.kt)("p",null,"When using the option ",(0,l.kt)("a",{parentName:"p",href:"/typegoose/docs/api/decorators/model-options#automaticname"},(0,l.kt)("inlineCode",{parentName:"a"},"automaticName")),", there are multiple cases when having ",(0,l.kt)("inlineCode",{parentName:"p"},"collection")," defined."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// Example without having \"collection\" defined\n@modelOptions({ options: { automaticName: true } })\nclass SomeClassWithoutCollection {\n  @prop()\n  public someProp: string;\n}\n\n// The resulting name will be the class name\nassertion(getName(SomeClassWithoutCollection) === 'SomeClassWithoutCollection');\n\n// Example having \"collection\" defined\n@modelOptions({ schemaOptions: { collection: 'someCollection' }, options: { automaticName: true } })\nclass SomeClassWithoutCollection {\n  @prop()\n  public someProp: string;\n}\n\n// The resulting name will be a combination of the class name and the collection\nassertion(getName(SomeClassWithoutCollection) === 'SomeClassWithoutCollection_someCollection');\n")),(0,l.kt)("h2",{id:"using-with-customname"},"Using with ",(0,l.kt)("inlineCode",{parentName:"h2"},"customName")),(0,l.kt)("p",null,"When using the option ",(0,l.kt)("a",{parentName:"p",href:"/typegoose/docs/api/decorators/model-options#customname"},(0,l.kt)("inlineCode",{parentName:"a"},"customName")),", it will be the name that gets generated."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'// Example having "customName" statically set\n@modelOptions({ options: { customName: "Hello" } })\nclass SomeClassWithCustomName {\n  @prop()\n  public someProp: string;\n}\n\n// The resulting name will be the statically defined "customName"\nassertion(getName(SomeClassWithCustomName) === \'Hello\');\n\n// Example having "customName" be a function\nlet counter = 0;\n@modelOptions({ options: { customName: () => {\n  counter++;\n  return "Hello" + counter;\n} } })\nclass SomeClassWithCustomNameFunction {\n  @prop()\n  public someProp: string;\n}\n\n// The resulting name will be the generated "customName"\nassertion(getName(SomeClassWithCustomNameFunction) === \'Hello0\');\nassertion(getName(SomeClassWithCustomNameFunction) === \'Hello1\');\n')),(0,l.kt)("h2",{id:"using-with-automaticname-and-customname"},"Using with ",(0,l.kt)("inlineCode",{parentName:"h2"},"automaticName")," and ",(0,l.kt)("inlineCode",{parentName:"h2"},"customName")),(0,l.kt)("p",null,"When using option ",(0,l.kt)("a",{parentName:"p",href:"/typegoose/docs/api/decorators/model-options#automaticname"},(0,l.kt)("inlineCode",{parentName:"a"},"automaticName"))," and ",(0,l.kt)("a",{parentName:"p",href:"/typegoose/docs/api/decorators/model-options#customname"},(0,l.kt)("inlineCode",{parentName:"a"},"customName"))," together, the resulting name will be a combination of the class name and ",(0,l.kt)("a",{parentName:"p",href:"/typegoose/docs/api/decorators/model-options#customname"},(0,l.kt)("inlineCode",{parentName:"a"},"customName")),"."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'// Example having "customName" statically set and having "automaticName"\n@modelOptions({ options: { customName: "Hello", automaticName: true } })\nclass SomeClassWithCustomNameAndAutomaticName {\n  @prop()\n  public someProp: string;\n}\n\n// The resulting name will be a combination of the class name and "customName"\nassertion(getName(SomeClassWithCustomNameAndAutomaticName) === \'SomeClassWithCustomNameAndAutomaticName_Hello\');\n')),(0,l.kt)("h2",{id:"simple-matrix"},"Simple Matrix"),(0,l.kt)("p",null,"This is a simple matrix to show what interacts with what, or also called a Truth Table."),(0,l.kt)("sub",null,(0,l.kt)("code",null,"x")," means it is unset"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Class name"),(0,l.kt)("th",{parentName:"tr",align:null},"customName"),(0,l.kt)("th",{parentName:"tr",align:null},"automaticName"),(0,l.kt)("th",{parentName:"tr",align:null},"collection"),(0,l.kt)("th",{parentName:"tr",align:null},"Result"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"Hello"')),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"Hello"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"Hello"')),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"SomeCollection"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"Hello"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"Hello"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"AcustomName"')),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"AcustomName"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"Hello"')),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"Hello"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"Hello"')),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"SomeCollection"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"Hello_SomeCollection"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"Hello"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"AcustomName"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"Hello_AcustomName"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"Hello"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"AcustomName"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"SomeCollection"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"Hello_AcustomName"'))))))}g.isMDXComponent=!0}}]);